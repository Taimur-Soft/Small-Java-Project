// Abstract class Animal
abstract class Animal {
    // Encapsulation
    private String name;
    private int age;

    // Constructor
    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // Getter and Setter method
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public abstract void makeSound();
}

class Dog extends Animal {

    // Constructor for Dog
    public Dog(String name, int age) {
        super(name, age);
    }

    @Override
    public void makeSound() {
        System.out.println(getName() + " says: Woowwww!");
    }
}

class Cat extends Animal {

    // Constructor for Cat
    public Cat(String name, int age) {
        super(name, age);
    }

    @Override
    public void makeSound() {
        System.out.println(getName() + " says: Meowwwww!");
    }
}

// Main class
public class Main {
    public static void main(String[] args) {
        // Create Dog and Cat objects
        Animal dog = new Dog("Buddy", 2);
        Animal cat = new Cat("Whiskers", 4);

        // Polymorphism
        dog.makeSound();  
        cat.makeSound();  

        // Demonstrating Encapsulation
        System.out.println(dog.getName() + " is " + dog.getAge() + " years old.");
        dog.setAge(4);
        System.out.println(dog.getName() + " is now " + dog.getAge() + " years old.");
    }
}
